//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "../zmk-nodefree-config/helper.h"
#include "../zmk-nodefree-config/keypos_def/keypos_38keys.h"

#define ___ &trans

#define BASE 0
#define NUM  1
#define NAV  2
#define SYM  3

// homerow mods
ZMK_BEHAVIOR(hrm, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <220>;
    quick-tap-ms = <150>;
    global-quick-tap;
    bindings = <&kp>, <&kp>;
)

//ZMK_COMBO(name, bindings, keypos, layers, timeout)
ZMK_COMBO(combo_esc, &kp ESC, LB2 LB3, ALL, 100)
ZMK_COMBO(combo_scln, &kp SEMICOLON, LB4 LB3, ALL, 100)
ZMK_COMBO(combo_enter, &lt SYM ENTER, RM2 RM3, ALL, 100)
ZMK_COMBO(combo_opposite_enter, &mo SYM, LM2 LM3, ALL, 100)

ZMK_LAYER(base,
            &kp SQT    &kp COMMA   &kp DOT      &kp P       &kp Y             &kp F      &kp G       &kp C       &kp R       &kp L
            &kp A      &hrm LALT O &hrm LCTRL E &hrm LGUI U &kp I             &kp D      &hrm RGUI H &hrm RCTL T &hrm LALT N &kp S
     &kp A  &kp COLON  &kp Q       &kp J        &kp K       &kp X             &kp B      &kp M       &kp W       &kp V       &kp Z &kp S
                                   &kp ESC  &lt NUM FSLH &mt LSHFT BSPC       &lt NAV SPACE  &mt LCTL TAB &kp ESC
)
ZMK_LAYER(lower,
            ___        ___        ___        ___        ___                  ___        &kp N7     &kp N8     &kp N9     &kp DEL
            &kp LG(N1) &kp LG(N2) &kp LG(N3) &kp LG(N4) &kp LG(N5)           &kp PIPE   &kp N4     &kp N5     &kp N6     &kp BSLH
     ___    &kp LG(N6) &kp LG(N7) &kp LG(N8) &kp LG(N9) &kp LG(N0)           &kp UNDER  &kp N1     &kp N2     &kp N3     &kp MINUS ___
                                  ___         ___       ___                  ___        &kp N0     ___
)
ZMK_LAYER(raise,
            &kp F9     &kp F10    &kp F11    &kp F12    ___                  ___        ___        &key_repeat &kp LS(INS) &kp DEL
            &kp F5     &kp F6     &kp F7     &kp F8     &kp GRAVE            &kp HOME   &kp LEFT   &kp DOWN    &kp UP      &kp RIGHT
       ___  &kp F1     &kp F2     &kp F3     &kp F4     &kp TILDE            ___        ___        ___         ___         &kp SEMI ___
                                  ___        ___        ___                  ___        ___        ___
)
ZMK_LAYER(symbols,
            &kp EXCL     &kp AT       &kp HASH     &kp DLLR  &kp PRCNT       &kp CARET  &kp AMPS   &kp STAR    &kp LPAR  &kp RPAR
            ___          ___          ___          ___       ___             ___        ___        &key_repeat &kp LBRC  &kp RBRC
       ___  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 ___       &bt BT_CLR      ___        ___        ___         &kp UNDER &kp QMARK ___
                                      ___          ___       ___             &kp EQUAL  ___        ___
)
